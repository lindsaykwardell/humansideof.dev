---
import DefaultLayout from "../layouts/DefaultLayout.astro";
import favorites from '../api/favorites'

const sorted = Object.entries(favorites).sort(([_, a],[__, b]) => {
    if (b.episodes.length - a.episodes.length === 0) {
        if (a.label < b.label) {
            return -1;
        } else {
            return 1;
        }
    } else {
        return b.episodes.length - a.episodes.length
    }
}).map(([_, favorite]) => favorite)
---

<DefaultLayout>
    <h2 class="font-josefin text-3xl text-center pb-4">Favorite Programming Languages</h2>
    <div class="flex flex-col md:flex-row gap-5 w-full md:w-11/12 lg:4/5 xl:w-2/3 m-auto">
        <canvas id="favorites" class="m-auto md:m-0"></canvas>
        <div>
            {sorted.map(favorite => 
                <details>
                    <summary>{favorite.label} - {favorite.episodes.length}</summary>
                    <ul class="list-disc pl-4 ml-4 py-2">
                        {favorite.episodes.map(episode => 
                            <li>
                                <a href={episode.url} class="underline">{episode.name}</a>
                            </li>
                        )}
                    </ul>
                </details>
            )}
        </div>
    </div>
</DefaultLayout>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    import favorites from '../api/favorites'
    import Chart from 'chart.js/auto'
    import type { ChartItem } from 'chart.js'

    const sorted = Object.entries(favorites).sort(([_, a],[__, b]) => {
        if (b.episodes.length - a.episodes.length === 0) {
            if (a.label < b.label) {
                return -1;
            } else {
                return 1;
            }
        } else {
            return b.episodes.length - a.episodes.length
        }
    }).map(([_, favorite]) => favorite)

    const ctx = document.getElementById('favorites') as ChartItem;

    new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: sorted.map(favorite => favorite.label),
            datasets: [{
                data: sorted.map(favorite => favorite.episodes.length),
                hoverOffset: 4
            }]
        },
        options: {
            plugins: {
                legend: {
                    labels: {
                        color: 'white'
                    }
                }
            }
        }
    });
</script>

<style>
    canvas {
        max-width: 500px;
        max-height: 500px;
    }
</style>